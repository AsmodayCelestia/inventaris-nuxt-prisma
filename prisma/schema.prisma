generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activity_log {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  log_name     String?   @db.VarChar(255)
  description  String    @db.Text
  subject_type String?   @db.VarChar(255)
  event        String?   @db.VarChar(255)
  subject_id   BigInt?   @db.UnsignedBigInt
  causer_type  String?   @db.VarChar(255)
  causer_id    BigInt?   @db.UnsignedBigInt
  properties   Json?
  batch_uuid   String?   @db.Char(36)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@index([log_name], map: "activity_log_log_name_index")
  @@index([causer_type, causer_id], map: "causer")
  @@index([subject_type, subject_id], map: "subject")
}

model brands {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name            String            @unique(map: "brands_name_unique") @db.VarChar(255)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  inventory_items inventory_items[]
}

model cache {
  key        String @id @db.VarChar(255)
  value      String @db.MediumText
  expiration Int
}

model cache_locks {
  key        String @id @db.VarChar(255)
  owner      String @db.VarChar(255)
  expiration Int
}

model categories {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name            String            @unique(map: "categories_name_unique") @db.VarChar(255)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  inventory_items inventory_items[]
}

model divisions {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  users      users[]
}

model floors {
  id             BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  number         String         @db.VarChar(255)
  unit_id        BigInt         @db.UnsignedBigInt
  created_at     DateTime?      @db.Timestamp(0)
  updated_at     DateTime?      @db.Timestamp(0)
  location_units location_units @relation(fields: [unit_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "floors_unit_id_foreign")
  rooms          rooms[]

  @@index([unit_id], map: "floors_unit_id_foreign")
}

model inventories {
  id                          BigInt                                  @id @default(autoincrement()) @db.UnsignedBigInt
  inventory_number            String                                  @unique(map: "inventories_inventory_number_unique") @db.VarChar(255)
  inventory_item_id           BigInt                                  @db.UnsignedBigInt
  acquisition_source          inventories_acquisition_source          @default(dbgenerated("-"))
  procurement_date            DateTime                                @db.Date
  purchase_price              Decimal                                 @db.Decimal(15, 2)
  estimated_depreciation      Decimal?                                @db.Decimal(15, 2)
  status                      inventories_status                      @default(Ada)
  image_path                  String?                                 @db.VarChar(255)
  qr_code_path                String?                                 @db.VarChar(255)
  unit_id                     BigInt                                  @db.UnsignedBigInt
  room_id                     BigInt                                  @db.UnsignedBigInt
  expected_replacement        DateTime?                               @db.Date
  last_checked_at             DateTime?                               @db.Date
  pj_id                       BigInt?                                 @db.UnsignedBigInt
  maintenance_frequency_type  inventories_maintenance_frequency_type?
  maintenance_frequency_value Int?
  last_maintenance_at         DateTime?                               @db.Date
  next_due_date               DateTime?                               @db.Date
  next_due_km                 Int?
  last_odometer_reading       Int?
  created_at                  DateTime?                               @db.Timestamp(0)
  updated_at                  DateTime?                               @db.Timestamp(0)
  inventory_items             inventory_items                         @relation(fields: [inventory_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventories_inventory_item_id_foreign")
  users                       users?                                  @relation(fields: [pj_id], references: [id], onUpdate: NoAction, map: "inventories_pj_id_foreign")
  rooms                       rooms                                   @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventories_room_id_foreign")
  location_units              location_units                          @relation(fields: [unit_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventories_unit_id_foreign")
  inventory_maintenances      inventory_maintenances[]

  @@index([inventory_item_id], map: "inventories_inventory_item_id_foreign")
  @@index([pj_id], map: "inventories_pj_id_foreign")
  @@index([room_id], map: "inventories_room_id_foreign")
  @@index([unit_id], map: "inventories_unit_id_foreign")
}

model inventory_items {
  id               BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  item_code        String        @unique(map: "inventory_items_item_code_unique") @db.VarChar(255)
  name             String        @db.VarChar(255)
  quantity         Int
  brand_id         BigInt        @db.UnsignedBigInt
  category_id      BigInt        @db.UnsignedBigInt
  type_id          BigInt        @db.UnsignedBigInt
  manufacturer     String        @db.VarChar(255)
  manufacture_year Int           @db.Year
  isbn             String?       @db.VarChar(255)
  image_path       String?       @db.VarChar(255)
  created_at       DateTime?     @db.Timestamp(0)
  updated_at       DateTime?     @db.Timestamp(0)
  inventories      inventories[]
  brands           brands        @relation(fields: [brand_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventory_items_brand_id_foreign")
  categories       categories    @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventory_items_category_id_foreign")
  item_types       item_types    @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventory_items_type_id_foreign")

  @@index([brand_id], map: "inventory_items_brand_id_foreign")
  @@index([category_id], map: "inventory_items_category_id_foreign")
  @@index([type_id], map: "inventory_items_type_id_foreign")
}

model inventory_maintenances {
  id                                             BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  inventory_id                                   BigInt                        @db.UnsignedBigInt
  inspection_date                                DateTime                      @db.Date
  issue_found                                    String?                       @db.Text
  solution_taken                                 String?                       @db.Text
  notes                                          String?                       @db.Text
  status                                         inventory_maintenances_status @default(reported)
  cost                                           Decimal?                      @db.Decimal(15, 0)
  photo_1                                        String?                       @db.VarChar(255)
  photo_2                                        String?                       @db.VarChar(255)
  photo_3                                        String?                       @db.VarChar(255)
  user_id                                        BigInt?                       @db.UnsignedBigInt
  odometer_reading                               Int?
  creator_id                                     BigInt?                       @db.UnsignedBigInt
  created_at                                     DateTime?                     @db.Timestamp(0)
  updated_at                                     DateTime?                     @db.Timestamp(0)
  deleted_at                                     DateTime?                     @db.Timestamp(0)
  users_inventory_maintenances_creator_idTousers users?                        @relation("inventory_maintenances_creator_idTousers", fields: [creator_id], references: [id], onUpdate: NoAction, map: "inventory_maintenances_creator_id_foreign")
  inventories                                    inventories                   @relation(fields: [inventory_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inventory_maintenances_inventory_id_foreign")
  users_inventory_maintenances_user_idTousers    users?                        @relation("inventory_maintenances_user_idTousers", fields: [user_id], references: [id], onUpdate: NoAction, map: "inventory_maintenances_user_id_foreign")

  @@index([creator_id], map: "inventory_maintenances_creator_id_foreign")
  @@index([inventory_id], map: "inventory_maintenances_inventory_id_foreign")
  @@index([user_id], map: "inventory_maintenances_user_id_foreign")
}

model item_types {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name            String            @unique(map: "item_types_name_unique") @db.VarChar(255)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  inventory_items inventory_items[]
}

model location_units {
  id          BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  name        String        @unique(map: "location_units_name_unique") @db.VarChar(255)
  created_at  DateTime?     @db.Timestamp(0)
  updated_at  DateTime?     @db.Timestamp(0)
  floors      floors[]
  inventories inventories[]
}

model media {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  medially_type String    @db.VarChar(255)
  medially_id   BigInt    @db.UnsignedBigInt
  file_url      String    @db.Text
  file_name     String    @db.VarChar(255)
  file_type     String?   @db.VarChar(255)
  size          BigInt    @db.UnsignedBigInt
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)

  @@index([medially_type, medially_id], map: "media_medially_type_medially_id_index")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String    @db.Text
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model rooms {
  id           BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  name         String        @db.VarChar(255)
  floor_id     BigInt        @db.UnsignedBigInt
  pj_lokasi_id BigInt?       @db.UnsignedBigInt
  created_at   DateTime?     @db.Timestamp(0)
  updated_at   DateTime?     @db.Timestamp(0)
  inventories  inventories[]
  floors       floors        @relation(fields: [floor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "rooms_floor_id_foreign")
  users        users?        @relation(fields: [pj_lokasi_id], references: [id], onUpdate: NoAction, map: "rooms_pj_lokasi_id_foreign")

  @@index([floor_id], map: "rooms_floor_id_foreign")
  @@index([pj_lokasi_id], map: "rooms_pj_lokasi_id_foreign")
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}

model users {
  id                                                              BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  name                                                            String                   @db.VarChar(255)
  email                                                           String                   @unique(map: "users_email_unique") @db.VarChar(255)
  password                                                        String                   @db.VarChar(255)
  division_id                                                     BigInt?                  @db.UnsignedBigInt
  role                                                            users_role
  is_room_supervisor                                              Boolean                  @default(false)
  is_pj_maintenance                                               Boolean                  @default(false)
  remember_token                                                  String?                  @db.VarChar(100)
  created_at                                                      DateTime?                @db.Timestamp(0)
  updated_at                                                      DateTime?                @db.Timestamp(0)
  inventories                                                     inventories[]
  inventory_maintenances_inventory_maintenances_creator_idTousers inventory_maintenances[] @relation("inventory_maintenances_creator_idTousers")
  inventory_maintenances_inventory_maintenances_user_idTousers    inventory_maintenances[] @relation("inventory_maintenances_user_idTousers")
  rooms                                                           rooms[]
  divisions                                                       divisions?               @relation(fields: [division_id], references: [id], onUpdate: NoAction, map: "users_division_id_foreign")

  @@index([division_id], map: "users_division_id_foreign")
}

enum inventories_acquisition_source {
  Beli
  Hibah
  Bantuan
  // - @map("-")
}

enum users_role {
  admin
  head
  karyawan
}

enum inventory_maintenances_status {
  reported
  on_progress
  handled
  done
  cancelled
}

enum inventories_status {
  Ada
  Rusak
  Perbaikan
  Hilang
  Dipinjam
  // - @map("-")
}

enum inventories_maintenance_frequency_type {
  bulan
  km
  minggu
  semester
}
